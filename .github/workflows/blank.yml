# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
  SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
  SPOTIFY_REFRESH_TOKEN: ${{ secrets.SPOTIFY_REFRESH_TOKEN }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      
      # Refresh spotify token
      - name: Refresh Spotify Access Token
        id: refresh-access-token
        uses: actions/github-script@v3
        with:
          script: |
            const octokit = require('@octokit/rest')({ auth: process.env.GITHUB_TOKEN });
            const axios = require('axios');

            async function refreshAccessToken() {
              const response = await axios({
                method: 'post',
                url: 'https://accounts.spotify.com/api/token',
                headers: {
                  'Authorization': 'Basic ' + Buffer.from(process.env.SPOTIFY_CLIENT_ID + ':' + process.env.SPOTIFY_CLIENT_SECRET).toString('base64'),
                  'Content-Type': 'application/x-www-form-urlencoded'
                },
                data: `grant_type=refresh_token&refresh_token=${process.env.SPOTIFY_REFRESH_TOKEN}`
              });

              return response.data.access_token;
            }

            async function run() {
              const accessToken = await refreshAccessToken();

              console.log(`Updating Spotify access token`);
              console.log(accessToken)

              await octokit.actions.createOrUpdateSecretForRepo({
                owner: process.env.GITHUB_REPOSITORY.split('/')[0],
                repo: process.env.GITHUB_REPOSITORY.split('/')[1],
                secret_name: SPOTIFY_ACCESS_TOKEN,
              encrypted_value: ${{ toJson(accessToken) }},
              visibility: private
              });
            }

            run().catch(error => {
              console.error(error);
              process.exit(1);
            });
            
      # Echo README file
      - name: Echo spotify refreshed token
        run: echo "${{ steps.refresh-access-token.outputs }}"
          
      # Spotify api short_term range
#       - name: HTTP Request Action
#         id: spotifyRes
#       # You may pin to the exact commit or the version.
#       # uses: fjogeleit/http-request-action@4ae1dfba856bfb530598ebb818f204befbb24cda
#         uses: fjogeleit/http-request-action@v1.13.0
#         with:
#           # Request URL
#           url: 'https://api.spotify.com/v1/me/top/tracks?limit=5&time_range=long_term'
#           # Request Method
#           method: 'GET'
#           # Bearer Authentication Token
#           bearerToken: ${{ secrets.SPOTIFY_ACCESS_TOKEN }}
          
#       # Echo spotifyRes 
#       - name: Show Response
#         run: |
#           echo ${{ steps.spotifyRes.outputs.response }}
#           echo ${{ steps.spotifyRes.outputs.headers }}
#           echo ${{ fromJson(steps.spotifyRes.outputs.response).limit }}
      
      # Read README file
      - name: Read file
        id: readmeFile
      # You may pin to the exact commit or the version.
      # uses: juliangruber/read-file-action@02bbba9876a8f870efd4ad64e3b9088d3fb94d4b
        uses: juliangruber/read-file-action@v1.1.6
        with:
          # File path
          path: README.md
        
      # Echo README file
      - name: Echo README file
        run: echo "${{ steps.readmeFile.outputs.content }}"
        
      
  
